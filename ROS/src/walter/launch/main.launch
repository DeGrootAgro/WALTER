<launch>
    <!-- Set the console to display debug info, comment next line to not display debug info. -->
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find walter)/cfg/debug_ros_console.conf"/>

    <!-- Create node for walter -->
    <!-- <node pkg="walter" type="walter_node" name="walter_instance" output="screen"/> -->

    <!-- Below are nodes used to estimate pose of walter -->
    <!-- Convert from sensor_msgs/NavSatFix to nav_msgs/Odometry  -->
    <node name="navsat_transform_node" pkg="robot_localization" type="navsat_transform_node" output="screen">
        <!-- Subscriptions -->
        <remap from="imu/data" to="/imu" />
        <remap from="gps/fix" to="/gps/fix" />
        <remap from="odometry/filtered" to="/odometry/filtered" />

        <!-- Publications -->
        <!-- Topic that has messages containing your robotâ€™s world frame position, transformed into GPS coordinates -->
        <remap from="gps/filtered" to="/gps/filtered" />
        <!-- Topic that has GPS coordinates of your robot, transformed into its world coordinate frame -->
        <remap from="odometry/gps" to="/odometry/gps" />
    </node>

    <!-- robot_localization EKF node for the odom frame -->
    <node pkg="robot_localization" type="ekf_localization_node" name="robot_localization_ekf_node_odom" clear_params="true">
        <param name="frequency" value="10." />
        <param name="sensor_timeout" value="0.2" />
        <param name="two_d_mode" value="true" />
        <param name="publish_tf" value="true" />
        <param name="map_frame" value="map" />
        <param name="odom_frame" value="odom" />
        <param name="base_link_frame" value="base_footprint" />
        <param name="world_frame" value="odom" />
        <param name="print_diagnostics" value="true" />
        <!-- Topic to which the odom is published of the merged sensor data -->
        <remap from="odometry/filtered" to="/odometry/filtered_twist" />

        <!-- Use IMU data from rotary encoders -->
        <param name="imu0" value="/imu/data" />
        <param name="imu0_differential" value="false"/>
        <rosparam param="imu0_config">[false,  false,  false,
            false,  false,  true,
            false,  false, false,
            false, false, true,
            true, false, false]</rosparam>
    </node>

    <!-- robot_localization EKF node for the map frame -->
    <node pkg="robot_localization" type="ekf_localization_node" name="robot_localization_ekf_node_map" clear_params="true">
        <param name="frequency" value="10" />
        <param name="sensor_timeout" value="0.2" />
        <param name="two_d_mode" value="true" />
        <param name="publish_tf" value="true" />
        <param name="map_frame" value="map" />
        <param name="odom_frame" value="odom" />
        <param name="base_link_frame" value="base_footprint" />
        <param name="world_frame" value="map" />
        <!-- Topic to which the odom is published of the merged sensor data -->
        <remap from="odometry/filtered" to="/odometry/filtered_map"/>

        <!-- Use IMU data from rotary encoders -->
        <param name="imu0" value="imu" />
        <param name="imu0_differential" value="false"/>
        <rosparam param="imu0_config">[false,  false,  false,
            false,  false,  true,
            false,  false, false,
            false, false, true,
            true, false, false]</rosparam>

        <!-- Use pose of AMCL -->
        <!-- <param name="pose0" value="/amcl_pose"/>
        <param name="pose0_differential" value="false"/>
        <rosparam param="pose0_config">[true,true,false,false,false,true,
                                        false, false,false,false, false, false,
                                        false,false,false]</rosparam> -->

        <!-- Use gps data from nav sat transform node -->
        <param name="odom0" value="/odometry/gps" />
        <rosparam param="odom0_config">[true, true, false, false, false, true,
                                        true, true, false,false, false, true,
                                        false,false,false]</rosparam>
    </node>

</launch>